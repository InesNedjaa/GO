// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.2
// 	protoc        v3.12.4
// source: proto/metrics/metric.proto

package metrics

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RegisterDeviceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           int32                  `protobuf:"varint,1,opt,name=Uid,proto3" json:"Uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterDeviceRequest) Reset() {
	*x = RegisterDeviceRequest{}
	mi := &file_proto_metrics_metric_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterDeviceRequest) ProtoMessage() {}

func (x *RegisterDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_metrics_metric_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterDeviceRequest.ProtoReflect.Descriptor instead.
func (*RegisterDeviceRequest) Descriptor() ([]byte, []int) {
	return file_proto_metrics_metric_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterDeviceRequest) GetUid() int32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type RegisterDeviceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterDeviceResponse) Reset() {
	*x = RegisterDeviceResponse{}
	mi := &file_proto_metrics_metric_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterDeviceResponse) ProtoMessage() {}

func (x *RegisterDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_metrics_metric_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterDeviceResponse.ProtoReflect.Descriptor instead.
func (*RegisterDeviceResponse) Descriptor() ([]byte, []int) {
	return file_proto_metrics_metric_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterDeviceResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SendMetricsData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cpu           float32                `protobuf:"fixed32,2,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory        float32                `protobuf:"fixed32,3,opt,name=memory,proto3" json:"memory,omitempty"`
	Bandwith      float32                `protobuf:"fixed32,4,opt,name=bandwith,proto3" json:"bandwith,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendMetricsData) Reset() {
	*x = SendMetricsData{}
	mi := &file_proto_metrics_metric_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMetricsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMetricsData) ProtoMessage() {}

func (x *SendMetricsData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_metrics_metric_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMetricsData.ProtoReflect.Descriptor instead.
func (*SendMetricsData) Descriptor() ([]byte, []int) {
	return file_proto_metrics_metric_proto_rawDescGZIP(), []int{2}
}

func (x *SendMetricsData) GetCpu() float32 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *SendMetricsData) GetMemory() float32 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *SendMetricsData) GetBandwith() float32 {
	if x != nil {
		return x.Bandwith
	}
	return 0
}

type Metricsack struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Metricsack) Reset() {
	*x = Metricsack{}
	mi := &file_proto_metrics_metric_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Metricsack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metricsack) ProtoMessage() {}

func (x *Metricsack) ProtoReflect() protoreflect.Message {
	mi := &file_proto_metrics_metric_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metricsack.ProtoReflect.Descriptor instead.
func (*Metricsack) Descriptor() ([]byte, []int) {
	return file_proto_metrics_metric_proto_rawDescGZIP(), []int{3}
}

func (x *Metricsack) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_proto_metrics_metric_proto protoreflect.FileDescriptor

var file_proto_metrics_metric_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2f,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x29, 0x0a, 0x15,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x55, 0x69, 0x64, 0x22, 0x32, 0x0a, 0x16, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x57, 0x0a, 0x0f, 0x53,
	0x65, 0x6e, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x10,
	0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x63, 0x70, 0x75,
	0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x6e, 0x64,
	0x77, 0x69, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x64,
	0x77, 0x69, 0x74, 0x68, 0x22, 0x26, 0x0a, 0x0a, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x61,
	0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0x82, 0x01, 0x0a,
	0x07, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x43, 0x0a, 0x0e, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x16, 0x2e, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x17, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x32, 0x0a,
	0x0d, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x10,
	0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x44, 0x61, 0x74, 0x61,
	0x1a, 0x0b, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x61, 0x63, 0x6b, 0x22, 0x00, 0x28,
	0x01, 0x42, 0x0f, 0x5a, 0x0d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_metrics_metric_proto_rawDescOnce sync.Once
	file_proto_metrics_metric_proto_rawDescData = file_proto_metrics_metric_proto_rawDesc
)

func file_proto_metrics_metric_proto_rawDescGZIP() []byte {
	file_proto_metrics_metric_proto_rawDescOnce.Do(func() {
		file_proto_metrics_metric_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_metrics_metric_proto_rawDescData)
	})
	return file_proto_metrics_metric_proto_rawDescData
}

var file_proto_metrics_metric_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_metrics_metric_proto_goTypes = []any{
	(*RegisterDeviceRequest)(nil),  // 0: RegisterDeviceRequest
	(*RegisterDeviceResponse)(nil), // 1: RegisterDeviceResponse
	(*SendMetricsData)(nil),        // 2: SendMetricsData
	(*Metricsack)(nil),             // 3: Metricsack
}
var file_proto_metrics_metric_proto_depIdxs = []int32{
	0, // 0: Metrics.RegisterDevice:input_type -> RegisterDeviceRequest
	2, // 1: Metrics.StreamMetrics:input_type -> SendMetricsData
	1, // 2: Metrics.RegisterDevice:output_type -> RegisterDeviceResponse
	3, // 3: Metrics.StreamMetrics:output_type -> Metricsack
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_metrics_metric_proto_init() }
func file_proto_metrics_metric_proto_init() {
	if File_proto_metrics_metric_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_metrics_metric_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_metrics_metric_proto_goTypes,
		DependencyIndexes: file_proto_metrics_metric_proto_depIdxs,
		MessageInfos:      file_proto_metrics_metric_proto_msgTypes,
	}.Build()
	File_proto_metrics_metric_proto = out.File
	file_proto_metrics_metric_proto_rawDesc = nil
	file_proto_metrics_metric_proto_goTypes = nil
	file_proto_metrics_metric_proto_depIdxs = nil
}
